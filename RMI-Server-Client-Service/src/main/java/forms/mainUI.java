/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.util.Calendar;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import dtos.FireAlarmSensor;
import interfaces.IFireAlarmService;
import response.models.FireAlarmSensorMultipleResponse;
import rmi.client.Client;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingUtilities;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.rmi.RemoteException;
import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.awt.event.ActionEvent;

/**
 *
 * @author Supun Randima
 */


public class mainUI extends javax.swing.JFrame {

    public static String user;
    private IFireAlarmService stub = null;
	private Client client = new Client();
	private List<FireAlarmSensor> list;
    /**
     * Creates new form mainUI
     */
     public mainUI() {
        this.stub = client.getStub();
        this.getData();
        initComponents();
    }
     
    public void getData() {
    	try {
    		FireAlarmSensorMultipleResponse res = this.stub.getFireAlarmSensorList();
        	this.list = res.getData();
        	
        	System.out.println(res.getStatus());
    	} catch (Exception e) {
			// TODO: handle exception
		}
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel6.setForeground(Color.WHITE);
        activeSensors = new javax.swing.JLabel();
        activeSensors.setForeground(Color.WHITE);
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlerts = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnAddSensor = new javax.swing.JButton();
        btnEditSensor = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSensors = new javax.swing.JTable();
        btnlogout = new javax.swing.JButton();
        lblTime = new JLabel("");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new Font("Sitka Heading", Font.BOLD, 14)); // NOI18N
        jLabel6.setText("Total Sensors");

        activeSensors.setFont(new Font("Sitka Heading", Font.BOLD, 14));

        jLabel10.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Fire Alarm System");
        
        String[] cols = {"Sensor", "Floor No", "Room No", "CO2 Level", "Smoke Level", "Status"};
        final DefaultTableModel model = new DefaultTableModel(cols, 0);
        final DefaultTableModel alertsModel = new DefaultTableModel(cols,0);
        
        for (FireAlarmSensor s : this.list) {
        	Object[] row = {s.get_id(), s.getFloor_no(), s.getRoom_no(), s.getCo2_level(), s.getSmoke_level(), s.isStatus()};
        	model.addRow(row);
        	
        	if( s.getCo2_level() > 5 ) {
        		alertsModel.addRow(row);
        	}
        	else if(s.getSmoke_level() > 5) {
        		alertsModel.addRow(row);
        	}
        }
        
     // ###################         setting clock date          ##############################       
   
        Timer timer1 = new Timer();
        timer1.scheduleAtFixedRate(new TimerTask() {
           
			@Override
            public void run() {
			    SimpleDateFormat dateFormat = new SimpleDateFormat("dd:MM:yyyy HH:mm:ss");
		        System.out.println(dateFormat.format(Calendar.getInstance().getTime()) );
		        String time = dateFormat.format(Calendar.getInstance().getTime()) ;
				lblTime.setText(dateFormat.format(Calendar.getInstance().getTime()));
	       
            }
        }, 1000, 1000);
     
        //   ################################     setting tables values       ########################################### 
     	
    	   // set alerts to alert table
        tblAlerts.setModel(alertsModel);
        
        // display all sensors
        tblSensors.setModel(model);
        
        //set active sensors
        activeSensors.setText(Integer.toString(this.list.size()));
        
        //        ##########################              refresh form                 ###############################
        
        // refresh form in every 30 seconds
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            private List<FireAlarmSensor> list;

			@Override
            public void run() {
				Client client = new Client();
				IFireAlarmService stub = null;
				stub = client.getStub();
				FireAlarmSensorMultipleResponse res;
				try {
					res = stub.getFireAlarmSensorList();
				 	this.list = res.getData();
		         	
	            	   // set alerts to alert table
	                tblAlerts.setModel(alertsModel);
	                
	                // display all sensors
	                tblSensors.setModel(model);
	                
	                //set active sensors
	                activeSensors.setText(Integer.toString(this.list.size()));
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	       
            }
        }, 30000, 30000);
        
        //End of refreshing values         
   
    jScrollPane1.setViewportView(tblAlerts);

    jLabel3.setFont(new java.awt.Font("Sitka Small", 1, 18)); // NOI18N
    jLabel3.setForeground(new java.awt.Color(255, 0, 0));
    jLabel3.setText("Alerts");

    btnAddSensor.setBackground(new java.awt.Color(153, 0, 204));
    btnAddSensor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnAddSensor.setForeground(new java.awt.Color(255, 255, 255));
    btnAddSensor.setText("Add Fire Alarm ");
    btnAddSensor.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAddSensorActionPerformed(evt);
        }
    });

    btnEditSensor.setBackground(new java.awt.Color(51, 51, 255));
    btnEditSensor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnEditSensor.setForeground(new java.awt.Color(255, 255, 255));
    btnEditSensor.setText("Edit Fire Alarm ");
    btnEditSensor.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnEditSensorActionPerformed(evt);
        }
    });

    jLabel11.setFont(new java.awt.Font("Sitka Small", 1, 18)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(0, 255, 0));
    jLabel11.setText("Sensors");

 
    jScrollPane2.setViewportView(tblSensors);
    
    btnAddNewUser = new JButton();
    btnAddNewUser.addActionListener(new ActionListener() {
    	public void actionPerformed(ActionEvent e) {
    		  new registrationUI().setVisible(true);
    	}
    });
    btnAddNewUser.setText("Add New User");
    btnAddNewUser.setForeground(Color.WHITE);
    btnAddNewUser.setFont(new Font("Tahoma", Font.BOLD, 11));
    btnAddNewUser.setBackground(new Color(153, 0, 204));
    
    
    btnlogout.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
        	btnlogoutActionPerformed(evt);
        }
    });
    
    
    
    btnlogout.setText("Log out");
    btnlogout.setForeground(Color.WHITE);
    btnlogout.setFont(new Font("Tahoma", Font.BOLD, 11));
    btnlogout.setBackground(Color.BLACK);
    
   
    lblTime.setForeground(Color.WHITE);
    lblTime.setFont(new Font("Tahoma", Font.BOLD, 12));

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1Layout.setHorizontalGroup(
    	jPanel1Layout.createParallelGroup(Alignment.LEADING)
    		.addGroup(jPanel1Layout.createSequentialGroup()
    			.addGap(72)
    			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
    				.addGroup(jPanel1Layout.createSequentialGroup()
    					.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 828, GroupLayout.PREFERRED_SIZE)
    					.addContainerGap())
    				.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
    					.addGroup(jPanel1Layout.createSequentialGroup()
    						.addComponent(jLabel11)
    						.addContainerGap())
    					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
    						.addGroup(jPanel1Layout.createSequentialGroup()
    							.addComponent(lblTime, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
    							.addPreferredGap(ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
    							.addComponent(btnlogout, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
    							.addGap(38))
    						.addGroup(jPanel1Layout.createSequentialGroup()
    							.addComponent(jLabel6)
    							.addGap(32)
    							.addComponent(activeSensors)
    							.addGap(730))
    						.addGroup(jPanel1Layout.createSequentialGroup()
    							.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
    								.addGroup(jPanel1Layout.createSequentialGroup()
    									.addComponent(btnAddNewUser, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE)
    									.addGap(115)
    									.addComponent(jLabel10)
    									.addPreferredGap(ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
    									.addComponent(btnAddSensor, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE))
    								.addGroup(jPanel1Layout.createSequentialGroup()
    									.addPreferredGap(ComponentPlacement.RELATED, 678, Short.MAX_VALUE)
    									.addComponent(btnEditSensor, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE)))
    							.addGap(37))
    						.addGroup(jPanel1Layout.createSequentialGroup()
    							.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
    								.addComponent(jLabel3)
    								.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 828, GroupLayout.PREFERRED_SIZE))
    							.addContainerGap(27, Short.MAX_VALUE))))))
    );
    jPanel1Layout.setVerticalGroup(
    	jPanel1Layout.createParallelGroup(Alignment.LEADING)
    		.addGroup(jPanel1Layout.createSequentialGroup()
    			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
    				.addGroup(jPanel1Layout.createSequentialGroup()
    					.addGap(122)
    					.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
    						.addComponent(jLabel6)
    						.addComponent(activeSensors))
    					.addGap(18)
    					.addComponent(jLabel3))
    				.addGroup(jPanel1Layout.createSequentialGroup()
    					.addGap(32)
    					.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
    						.addComponent(btnAddSensor, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
    						.addComponent(btnAddNewUser, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
    						.addComponent(jLabel10))
    					.addGap(9)
    					.addComponent(btnEditSensor, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)))
    			.addGap(18)
    			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 133, GroupLayout.PREFERRED_SIZE)
    			.addGap(50)
    			.addComponent(jLabel11)
    			.addGap(18)
    			.addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 133, GroupLayout.PREFERRED_SIZE)
    			.addGap(11)
    			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
    				.addComponent(btnlogout, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)
    				.addComponent(lblTime))
    			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1.setLayout(jPanel1Layout);

//    if(user.equals("admin@gmail.com")) btnAddSensor.setVisible(true);
//    else btnAddSensor.setVisible(false);
//    if(user.equals("admin@gmail.com")) btnEditSensor.setVisible(true);
//    else btnEditSensor.setVisible(false);
    
//    if(user.equals("admin@gmail.com")) btnAddNewUser.setVisible(true);
//    else btnAddNewUser.setVisible(false);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    layout.setHorizontalGroup(
    	layout.createParallelGroup(Alignment.LEADING)
    		.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, 927, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
    	layout.createParallelGroup(Alignment.LEADING)
    		.addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
    );
    getContentPane().setLayout(layout);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    protected void btnlogoutActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
    	 this.dispose();
    	 new loginUI().setVisible(true);
	}

	private void btnEditSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSensorActionPerformed
        // TODO add your handling code here:
		 this.dispose();
        new editSensorUI().setVisible(true);
    }//GEN-LAST:event_btnEditSensorActionPerformed

    private void btnAddSensorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSensorActionPerformed
        // TODO add your handling code here:
    	 this.dispose();
        new newSensorUI().setVisible(true);
    }//GEN-LAST:event_btnAddSensorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//    	user = args[0];
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //user = args[0];
        
        // create a table model and set a Column Identifiers to this model 
        Object[] columns = {"Sensor","Floor","Room No","CO2 Level", "Smoke Level", "Temperature"};
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(columns);
        
       JTable jTable = new JTable();
       jTable.setModel(model);
       
 
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new mainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSensor;
    private javax.swing.JButton btnEditSensor;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel activeSensors;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAlerts;
    private static javax.swing.JTable tblSensors;
    private JButton btnAddNewUser;
    private JButton btnlogout;
    private JLabel lblTime;
}
